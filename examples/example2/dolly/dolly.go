// This code was generated by dolly.generator. DO NOT EDIT

package dolly

import (
	"github.com/terryhay/dolly/pkg/dollyconf"
	"github.com/terryhay/dolly/pkg/dollyerr"
	"github.com/terryhay/dolly/pkg/helpdisplay/data"
	tbd "github.com/terryhay/dolly/pkg/helpdisplay/termbox_decorator"
	"github.com/terryhay/dolly/pkg/helpdisplay/views"
	"github.com/terryhay/dolly/pkg/parsed_data"
	"github.com/terryhay/dolly/pkg/parser"
)

const (
	// CommandIDNamelessCommand - checks arguments types
	CommandIDNamelessCommand dollyconf.CommandID = iota + 1
	// CommandIDPrintHelpInfo - print help info
	CommandIDPrintHelpInfo
)

const (
	// CommandH - print help info
	CommandH dollyconf.Command = "-h"
	// CommandHelp - print help info
	CommandHelp = "help"
)

const (
	// FlagCheck - check command arguments types
	FlagCheck dollyconf.Flag = "-check"
)

// Parse - processes command line arguments
func Parse(args []string) (res *parsed_data.ParsedData, err *dollyerr.Error) {
	appArgConfig := dollyconf.NewArgParserConfig(
		// appDescription
		dollyconf.ApplicationDescription{
			AppName:      "example2",
			NameHelpInfo: "shows how parser generator works without commands",
			DescriptionHelpInfo: []string{
				"you can write more detailed description here",
			},
		},
		// flagDescriptions
		map[dollyconf.Flag]*dollyconf.FlagDescription{
			FlagCheck: {
				DescriptionHelpInfo: "check command arguments types",
				ArgDescription: &dollyconf.ArgumentsDescription{
					AmountType:              dollyconf.ArgAmountTypeSingle,
					SynopsisHelpDescription: "str",
				},
			},
		},
		// commandDescriptions
		nil,
		// helpCommandDescription
		dollyconf.NewHelpCommandDescription(
			CommandIDPrintHelpInfo,
			map[dollyconf.Command]bool{
				CommandH:    true,
				CommandHelp: true,
			},
		),
		// namelessCommandDescription
		dollyconf.NewNamelessCommandDescription(
			CommandIDNamelessCommand,
			"checks arguments types",
			&dollyconf.ArgumentsDescription{
				AmountType:              dollyconf.ArgAmountTypeList,
				SynopsisHelpDescription: "str list",
			},
			map[dollyconf.Flag]bool{
				FlagCheck: true,
			},
			nil,
		))

	if res, err = parser.Parse(appArgConfig, args); err != nil {
		return nil, err
	}

	if res.GetCommandID() == CommandIDPrintHelpInfo {
		var pageView views.PageView
		err = pageView.Init(tbd.NewTermBoxDecorator(nil), data.MakePage(appArgConfig))
		if err != nil {
			return nil, err
		}
		err = pageView.Run()
		if err != nil {
			return nil, err
		}

		return nil, nil
	}

	return res, nil
}
