// This code was generated by dolly.generator. DO NOT EDIT

package dolly

import (
	apConf "github.com/terryhay/dolly/argparser/arg_parser_config"
	"github.com/terryhay/dolly/argparser/parsed_data"
	"github.com/terryhay/dolly/argparser/parser"
	helpOut "github.com/terryhay/dolly/argparser/plain_help_out"
	"github.com/terryhay/dolly/utils/dollyerr"
)

const (
	// CommandIDNamelessCommand - runs example3
	CommandIDNamelessCommand apConf.CommandID = iota + 1
	// CommandIDPrintHelpInfo - print help info
	CommandIDPrintHelpInfo
)

const (
	// CommandH - print help info
	CommandH apConf.Command = "-h"
	// CommandHelp - print help info
	CommandHelp = "help"
)

// Parse - processes command line arguments
func Parse(args []string) (res *parsed_data.ParsedData, err *dollyerr.Error) {
	appArgConfig := apConf.NewArgParserConfig(
		// appDescription
		apConf.ApplicationDescription{
			AppName:      "example3",
			NameHelpInfo: "shows how parser generator works without commands and flags",
			DescriptionHelpInfo: []string{
				"you can write more detailed description here",
			},
		},
		// flagDescriptions
		nil,
		// commandDescriptions
		nil,
		// helpCommandDescription
		apConf.NewHelpCommandDescription(
			CommandIDPrintHelpInfo,
			map[apConf.Command]bool{
				CommandH:    true,
				CommandHelp: true,
			},
		),
		// namelessCommandDescription
		apConf.NewNamelessCommandDescription(
			CommandIDNamelessCommand,
			"runs example3",
			nil,
			nil,
			nil,
		))

	if res, err = parser.Parse(appArgConfig, args); err != nil {
		return nil, err
	}

	if res.GetCommandID() == CommandIDPrintHelpInfo {
		helpOut.PrintHelpInfo(appArgConfig)
		return nil, nil
	}

	return res, nil
}
