package page_model_test_tools

import "fmt"

func getExpectedRowsByWidth(terminalWidth int) []string {
	switch terminalWidth {
	case TerminalWidth100:
		return []string{
			"                             example",
			"NAME",
			"    example – shows how argtools generator works",
			"",
			"SYNOPSIS",
			"    example [-fl str ...] [-il str ...] [-sl str ...]",
			"    example print [-checkargs] [-f str] [-fl str ...] [-i str] [-il",
			"    str ...] [-s str] [-sl str ...]",
			"",
			"DESCRIPTION",
			"    you can write more detailed description here",
			"",
			"    and use several paragraphs",
			"",
			"The commands are as follows:",
			"    <empty>	checks arguments types",
			"",
			"    print	print command line arguments with optional checking",
			"",
			"The flags are as follows:",
			"    -checkargs",
			"        do arguments checking",
			"",
			"    -f	single float",
			"",
			"    -fl	float list",
			"",
			"    -i	int string",
			"",
			"    -il	int list",
			"",
			"    -s	single string",
			"",
			"    -sl	string list",
		}
	case TerminalWidth20:
		return []string{
			"   example",
			"NAME",
			"example – shows",
			"how argtools",
			"generator works",
			"",
			"SYNOPSIS",
			"example [-fl",
			"str ...] [-il",
			"str ...] [-sl",
			"str ...]",
			"example print",
			"[-checkargs] [-f",
			"str] [-fl str",
			"...] [-i str]",
			"[-il str ...]",
			"[-s str] [-sl",
			"str ...]",
			"",
			"DESCRIPTION",
			"you can write",
			"more detailed",
			"description here",
			"",
			"and use several",
			"paragraphs",
			"",
			"The commands",
			"are as follows:",
			"<empty>	checks",
			"arguments types",
			"",
			"print	print",
			"command line",
			"arguments with",
			"optional checking",
			"",
			"The flags are",
			"as follows:",
			"-checkargs",
			"do arguments",
			"checking",
			"",
			"-f	single float",
			"",
			"-fl	float list",
			"",
			"-i	int string",
			"",
			"-il	int list",
			"",
			"-s	single string",
			"",
			"-sl\tstring list",
		}
	default:
		panic(fmt.Sprintf("don't know what return for terminal width '%d'", terminalWidth))
	}
}
